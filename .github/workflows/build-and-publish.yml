# This is a basic workflow to help you get started with Actions

name: Build extension

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: .\build.ps1
        shell: pwsh

      - name: Store vsix
        uses: actions/upload-artifact@v2.2.4
        with:
          name: vsix
          path: ./*.vsix
    
  deploy-dev:
    runs-on: windows-latest
    needs: build
    environment: dev
    
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        name: vsix
        
    - run: |
        & npm install -g tfx-cli
      shell: pwsh
    
    - run: |
        $vsix = $((dir jessehouwing.pre-post-tasks-dev-*.vsix)[0].Name)
        $extensionData = & tfx extension show --vsix $vsix --json --no-color --no-prompt --auth-type pat --token ${{ secrets.AZURE_DEVOPS_MARKETPLACE }}
        $extensionData = $extensionData | ConvertFrom-Json
        $version = ($vsix | select-string "\d+\.\d+.\d+").Matches[0].Value
        if (($extensionData.Versions | ?{ $version -eq $_.version} ).Count -gt 0 ) {
          write-host "::set-output name=skipPublish::true"
        }
      shell: pwsh
      name: Query current version 
      id: queryVersion
      
    - run: |
        & tfx extension publish --vsix $((dir jessehouwing.pre-post-tasks-dev-*.vsix)[0].Name) --auth-type pat --token ${{ secrets.AZURE_DEVOPS_MARKETPLACE }}
      shell: pwsh
      if: ${{ steps.queryVersion.outputs.skipPublish != 'true' }}
      
  deploy-public:
    runs-on: windows-latest
    needs: build
    environment: public
    
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        name: vsix
        
    - run: |
        & del jessehouwing.pre-post-tasks-dev-*.vsix
        & npm install -g tfx-cli
      shell: pwsh
      
    - run: |
        $vsix = $((dir jessehouwing.pre-post-tasks-*.vsix)[0].Name)
        $extensionData = & tfx extension show --vsix $vsix --json --no-color --no-prompt --auth-type pat --token ${{ secrets.AZURE_DEVOPS_MARKETPLACE }}
        $extensionData = $extensionData | ConvertFrom-Json
        $version = ($vsix | select-string "\d+\.\d+.\d+").Matches[0].Value
        if (($extensionData.Versions | ?{ $version -eq $_.version} ).Count -gt 0 ) {
          write-host "::set-output name=skipPublish::true"
        }
      shell: pwsh
      name: Query current version 
      id: queryVersion
      
    - run: |
        & tfx extension publish --vsix $((dir jessehouwing.pre-post-tasks-*.vsix)[0].Name) --auth-type pat --token ${{ secrets.AZURE_DEVOPS_MARKETPLACE }}
      shell: pwsh
      if: ${{ steps.queryVersion.outputs.skipPublish != 'true' }}
